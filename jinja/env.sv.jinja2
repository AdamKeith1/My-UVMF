/*
  Module        : {{ DUT.Module }}
  UMV Component : environment
  Author        : 
*/

`ifndef {{ DUT.Module | upper }}_ENV_SV
`define {{ DUT.Module | upper }}_ENV_SV

// --- UVM --- //
`include "uvm_macros.svh"
import uvm_pkg::*;

// --- Packages --- //
{% if DUT.Dependencies.Packages -%}
    {% for file, package in DUT.Dependencies.Packages.items() -%}
`include "{{ file }}"
import {{ package }}::*;
    {% endfor -%}
{% endif %}
// --- Includes --- //
`include "sequence_item.sv"
`include "sequencer.sv"
`include "driver.sv"
`include "monitor.sv"
`include "interface.sv"
{% if DUT.Dependencies.Includes -%}
    {% for include in DUT.Dependencies.Includes -%}
`include "{{ include }}"
    {% endfor -%}
{% endif -%}
{# Blank Line #}
// --- Environment --- //
class {{ DUT.Module }}_env extends uvm_env;
  `uvm_component_utils({{ DUT.Module }}_env)
  
  // --- Env Components --- //
  {{ DUT.Module }}_agent agnt;
  {{ DUT.Module }}_scoreboard scb;

  // --- Constructor --- //
  function new(string name = "{{ DUT.Module }}_env", uvm_component parent);
    super.new(name, parent);
    `uvm_info("ENV_CLASS", "Inside Constructor", UVM_HIGH)
  endfunction : new
  
  // --- Build Phase --- //
  function void build_phase(uvm_phase phase);
    super.build_phase(phase);
    `uvm_info("ENV_CLASS", "Build Phase", UVM_HIGH)
    
    // --- Build Agent + Scoreboard --- //
    agnt = {{ DUT.Module }}_agent::type_id::create("agnt", this);
    scb = {{ DUT.Module }}_scoreboard::type_id::create("scb", this);
    
  endfunction : build_phase
  
  // --- Connect Phase --- //
  function void connect_phase(uvm_phase phase);
    super.connect_phase(phase);
    `uvm_info("ENV_CLASS", "Connect Phase", UVM_HIGH)
    
    // --- Monitor -> Scoreboard --- //
    agnt.mon.monitor_port.connect(scb.scoreboard_port);
    
  endfunction : connect_phase
  
endclass : {{ DUT.Module }}_env

`endif