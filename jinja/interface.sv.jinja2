interface {{ DUT.Module }}_interface(input logic {{ DUT.Ports.Clock }});
  {%- set ports_in = DUT.Ports.In %}
  {%- set ports_out = DUT.Ports.Out %}

  {%- set max_len_in = ports_in.values() | map('length') | max %}
  {%- set max_len_out = ports_out.values() | map('length') | max %}
  {%- set max_len = [max_len_in, max_len_out] | max %}

  {%- macro pad(variable, length) -%}
      {{- variable -}}{{ ' ' * (length - variable|length) }}
  {%- endmacro %}

  // --- Inputs --- //
  {% for signal, bit_width in ports_in.items() -%}
  logic {{ pad(bit_width, max_len) }} {{ signal }};
  {% endfor -%}

  {# Blank Line #}
  // --- Outputs --- //
  {% for signal, bit_width in ports_out.items() -%}
  logic {{ pad(bit_width, max_len) }} {{ signal }};
  {% endfor -%}

  {# Blank Line #}
endinterface: {{ DUT.Module }}_interface