// --- Include --- //
{% for file in Dependencies.Include -%}
`include "{{ file }}"
{% endfor -%}
{# Blank Line #}
class {{ DUT.Module }}_test extends uvm_test;
  `uvm_component_utils({{ DUT.Module }}_test)

  // --- Test Components --- //
  {{ DUT.Module }}_env env;
  {%- for seq, seq_name in Stimulus.Sequences.items() %}
    {{ DUT.Module }}_{{ seq }}_sequence {{ seq_name }};
  {%- endfor %}

  // --- Clock --- //
  parameter CLK_PERIOD = {{ Testbench.Clock }};

  // --- Constructor --- //
  function new(string name = "{{ DUT.Module }}_test", uvm_component parent);
    super.new(name, parent);
    `uvm_info("TEST_CLASS", "Inside Constructor", UVM_HIGH)
  endfunction: new
  
  // --- Build Phase --- //
  function void build_phase(uvm_phase phase);
    super.build_phase(phase);
    `uvm_info("TEST_CLASS", "Build Phase", UVM_HIGH)

    // --- Build Environment --- //
    env = {{ DUT.Module }}_env::type_id::create("env", this);

  endfunction: build_phase

  // --- Connect Phase --- //
  function void connect_phase(uvm_phase phase);
    super.connect_phase(phase);
    `uvm_info("TEST_CLASS", "Connect Phase", UVM_HIGH)

  endfunction: connect_phase

  // --- Test Procedure --- //
  task run_phase (uvm_phase phase);
    super.run_phase(phase);
    `uvm_info("TEST_CLASS", "Run Phase", UVM_HIGH)

    phase.raise_objection(this);

      // --- Test Procedure --- //
      // User fills in 
    
    phase.drop_objection(this);

  endtask: run_phase

endclass : {{ DUT.Module }}_test